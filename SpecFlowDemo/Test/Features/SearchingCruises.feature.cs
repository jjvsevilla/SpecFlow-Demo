// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SearchingCruises")]
    public partial class SearchingCruisesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SearchingCruises.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SearchingCruises", "\tIn order to get some good deals\r\n\tAs a vacationer\r\n\tI want to search some cruise" +
                    "s", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have entered Carnival search page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Searching cruises to Alaska")]
        [NUnit.Framework.CategoryAttribute("done")]
        [NUnit.Framework.CategoryAttribute("search")]
        [NUnit.Framework.CategoryAttribute("by")]
        [NUnit.Framework.CategoryAttribute("sail")]
        [NUnit.Framework.CategoryAttribute("to")]
        public virtual void SearchingCruisesToAlaska()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Searching cruises to Alaska", new string[] {
                        "done",
                        "search",
                        "by",
                        "sail",
                        "to"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.When("I click on SAIL TO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
  testRunner.And("I select sail to \"Alaska\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then("the result should display some cruises", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Searching cruises from Miami")]
        [NUnit.Framework.CategoryAttribute("done")]
        [NUnit.Framework.CategoryAttribute("search")]
        [NUnit.Framework.CategoryAttribute("by")]
        [NUnit.Framework.CategoryAttribute("sail")]
        [NUnit.Framework.CategoryAttribute("from")]
        public virtual void SearchingCruisesFromMiami()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Searching cruises from Miami", new string[] {
                        "done",
                        "search",
                        "by",
                        "sail",
                        "from"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 19
 testRunner.When("I click on SAIL FROM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
  testRunner.And("I select sail from \"Miami\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.Then("the result should display some cruises", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Searching cruises by dates")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("wip")]
        [NUnit.Framework.CategoryAttribute("search")]
        [NUnit.Framework.CategoryAttribute("by")]
        [NUnit.Framework.CategoryAttribute("dates")]
        public virtual void SearchingCruisesByDates()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Searching cruises by dates", new string[] {
                        "ignore",
                        "wip",
                        "search",
                        "by",
                        "dates"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 27
 testRunner.When("I click on DATES", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
  testRunner.And("I select as date \"2017, Feb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.Then("the result should display some cruises", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Searching cruises by duration")]
        [NUnit.Framework.CategoryAttribute("done")]
        [NUnit.Framework.CategoryAttribute("search")]
        [NUnit.Framework.CategoryAttribute("by")]
        [NUnit.Framework.CategoryAttribute("duration")]
        public virtual void SearchingCruisesByDuration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Searching cruises by duration", new string[] {
                        "done",
                        "search",
                        "by",
                        "duration"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 34
 testRunner.When("I click on DURATION", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
  testRunner.And("I select duration \"6 - 9\" days", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.Then("the result should display some cruises", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Searching cruises")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("search")]
        [NUnit.Framework.TestCaseAttribute("Alaska", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("The Bahamas", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Bermuda", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Canada & New England", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Caribbean", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Europe", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Hawaii", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Mexico", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Panama Canal", "x", "x", "x", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Transatlantic", "x", "x", "x", new string[0])]
        public virtual void SearchingCruises(string to, string from, string dates, string duration, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "search"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Searching cruises", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 41
 testRunner.When("I click on SAIL TO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
  testRunner.And(string.Format("I select sail to \"{0}\"", to), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Then("the result should display some cruises", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
